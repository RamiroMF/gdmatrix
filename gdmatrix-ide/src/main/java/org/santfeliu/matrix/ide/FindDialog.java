/*
 * GDMatrix
 *  
 * Copyright (C) 2020, Ajuntament de Sant Feliu de Llobregat
 *  
 * This program is licensed and may be used, modified and redistributed under 
 * the terms of the European Public License (EUPL), either version 1.1 or (at 
 * your option) any later version as soon as they are approved by the European 
 * Commission.
 *  
 * Alternatively, you may redistribute and/or modify this program under the 
 * terms of the GNU Lesser General Public License as published by the Free 
 * Software Foundation; either  version 3 of the License, or (at your option) 
 * any later version. 
 *   
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 *    
 * See the licenses for the specific language governing permissions, limitations 
 * and more details.
 *    
 * You should have received a copy of the EUPL1.1 and the LGPLv3 licenses along 
 * with this program; if not, you may find them at: 
 *    
 * https://joinup.ec.europa.eu/software/page/eupl/licence-eupl
 * http://www.gnu.org/licenses/ 
 * and 
 * https://www.gnu.org/licenses/lgpl.txt
 */
package org.santfeliu.matrix.ide;

/**
 *
 * @author realor
 */
public class FindDialog extends javax.swing.JDialog
{
  /** Creates new form FindDialog */
  public FindDialog(java.awt.Frame parent)
  {
    super(parent, false);
    initComponents();
  }

  public FindDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
  }

  public void setTextToFind(String text)
  {
    findTextField.setText(text);
  }

  public String getTextToFind()
  {
    return findTextField.getText();
  }

  public void setLabelText(String text)
  {
    findLabel.setText(text);
  }

  public String getLabelText()
  {
    return findLabel.getText();
  }

  protected boolean next(String text)
  {
    return false;
  }

  protected boolean previous(String text)
  {
    return false;
  }

  public void showDialog()
  {
    enableNextButton();
    setLocationRelativeTo(getParent());
    pack();
    setVisible(true);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    southPanel = new javax.swing.JPanel();
    previousButton = new javax.swing.JButton();
    nextButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    centerPanel = new javax.swing.JPanel();
    findLabel = new javax.swing.JLabel();
    findTextField = new javax.swing.JTextField();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Find");

    previousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/santfeliu/matrix/ide/resources/images/previous.gif"))); // NOI18N
    previousButton.setText("Previous");
    previousButton.setEnabled(false);
    previousButton.setMargin(new java.awt.Insets(2, 8, 2, 8));
    previousButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        previousButtonActionPerformed(evt);
      }
    });
    southPanel.add(previousButton);

    nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/santfeliu/matrix/ide/resources/images/next.gif"))); // NOI18N
    nextButton.setText("Next");
    nextButton.setEnabled(false);
    nextButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    nextButton.setMargin(new java.awt.Insets(2, 8, 2, 8));
    nextButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        nextButtonActionPerformed(evt);
      }
    });
    southPanel.add(nextButton);

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        cancelButtonActionPerformed(evt);
      }
    });
    southPanel.add(cancelButton);

    getContentPane().add(southPanel, java.awt.BorderLayout.PAGE_END);

    centerPanel.setLayout(new java.awt.GridBagLayout());

    findLabel.setText("Text:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    centerPanel.add(findLabel, gridBagConstraints);

    findTextField.addKeyListener(new java.awt.event.KeyAdapter()
    {
      public void keyReleased(java.awt.event.KeyEvent evt)
      {
        FindDialog.this.keyReleased(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    centerPanel.add(findTextField, gridBagConstraints);

    getContentPane().add(centerPanel, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void previousButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_previousButtonActionPerformed
  {//GEN-HEADEREND:event_previousButtonActionPerformed
    boolean found = previous(findTextField.getText());
    previousButton.setEnabled(found);
    nextButton.setEnabled(true);
  }//GEN-LAST:event_previousButtonActionPerformed

  private void nextButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nextButtonActionPerformed
  {//GEN-HEADEREND:event_nextButtonActionPerformed
    boolean found = next(findTextField.getText());
    nextButton.setEnabled(found);
    previousButton.setEnabled(true);
  }//GEN-LAST:event_nextButtonActionPerformed

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
  {//GEN-HEADEREND:event_cancelButtonActionPerformed
    setVisible(false);
    dispose();
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void keyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_keyReleased
  {//GEN-HEADEREND:event_keyReleased
    enableNextButton();
  }//GEN-LAST:event_keyReleased

  private void enableNextButton()
  {
    String text = findTextField.getText();
    boolean enabled = (text != null && text.length() > 0);
    nextButton.setEnabled(enabled);
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    java.awt.EventQueue.invokeLater(new Runnable()
    {

      public void run()
      {
        FindDialog dialog = new FindDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter()
        {

          public void windowClosing(java.awt.event.WindowEvent e)
          {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JPanel centerPanel;
  private javax.swing.JLabel findLabel;
  private javax.swing.JTextField findTextField;
  private javax.swing.JButton nextButton;
  private javax.swing.JButton previousButton;
  private javax.swing.JPanel southPanel;
  // End of variables declaration//GEN-END:variables
}
