/*
 * GDMatrix
 *  
 * Copyright (C) 2020, Ajuntament de Sant Feliu de Llobregat
 *  
 * This program is licensed and may be used, modified and redistributed under 
 * the terms of the European Public License (EUPL), either version 1.1 or (at 
 * your option) any later version as soon as they are approved by the European 
 * Commission.
 *  
 * Alternatively, you may redistribute and/or modify this program under the 
 * terms of the GNU Lesser General Public License as published by the Free 
 * Software Foundation; either  version 3 of the License, or (at your option) 
 * any later version. 
 *   
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 *    
 * See the licenses for the specific language governing permissions, limitations 
 * and more details.
 *    
 * You should have received a copy of the EUPL1.1 and the LGPLv3 licenses along 
 * with this program; if not, you may find them at: 
 *    
 * https://joinup.ec.europa.eu/software/page/eupl/licence-eupl
 * http://www.gnu.org/licenses/ 
 * and 
 * https://www.gnu.org/licenses/lgpl.txt
 */
package org.santfeliu.swing;

import java.awt.Component;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import javax.swing.DefaultListModel;

/**
 *
 * @author real
 */
public class JFontChooser extends javax.swing.JDialog
{
  static String fontNames[];
  boolean accept = false;

  /** Creates new form JFontChooser */
  public JFontChooser(java.awt.Frame parent)
  {
    this(parent, true);
  }
  
  public JFontChooser(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    loadFonts();
  }

  public boolean showDialog()
  {
    return showDialog(getParent());
  }

  public boolean showDialog(Component parent)
  {
    pack();
    setMinimumSize(getSize());
    setLocationRelativeTo(parent);    
    setVisible(true);
    return accept;
  }

  public void setSelectedFont(Font font)
  {
    String fontName = font.getName();
    fontList.setSelectedValue(fontName, true);

    String style = "Plain";
    if (font.isBold() && font.isItalic()) style = "Bold Italic";
    else if (font.isBold()) style ="Bold";
    else if (font.isItalic()) style = "Italic";
    styleList.setSelectedValue(style, true);

    String size = String.valueOf(font.getSize());
    sizeList.setSelectedValue(size, true);
  }

  public Font getSelectedFont()
  {
    String fontName = fontTextField.getText();
    if (fontName == null) fontName = "Monospaced";

    int style = Font.PLAIN;
    String styleName = styleTextField.getText();
    if ("Plain".equals(styleName)) style = Font.PLAIN;
    else if ("Bold".equals(styleName)) style = Font.BOLD;
    else if ("Italic".equals(styleName)) style = Font.ITALIC;
    else if ("Bold Italic".equals(styleName)) style = Font.BOLD | Font.ITALIC;

    int size;
    try
    {
      size = Integer.parseInt(sizeTextField.getText());
    }
    catch (NumberFormatException ex)
    {
      size = 14;
    }
    return new Font(fontName, style, size);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    centerPanel = new javax.swing.JPanel();
    fontLabel = new javax.swing.JLabel();
    styleLabel = new javax.swing.JLabel();
    sizeLabel = new javax.swing.JLabel();
    fontTextField = new javax.swing.JTextField();
    styleTextField = new javax.swing.JTextField();
    sizeTextField = new javax.swing.JTextField();
    scrollPane1 = new javax.swing.JScrollPane();
    fontList = new javax.swing.JList();
    scrollPane2 = new javax.swing.JScrollPane();
    styleList = new javax.swing.JList();
    scrollPane3 = new javax.swing.JScrollPane();
    sizeList = new javax.swing.JList();
    samplePanel = new javax.swing.JPanel();
    sampleLabel = new javax.swing.JLabel();
    southPanel = new javax.swing.JPanel();
    acceptButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Choose font");

    centerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
    centerPanel.setLayout(new java.awt.GridBagLayout());

    fontLabel.setText("Font:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(fontLabel, gridBagConstraints);

    styleLabel.setText("Style:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(styleLabel, gridBagConstraints);

    sizeLabel.setText("Size:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(sizeLabel, gridBagConstraints);

    fontTextField.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(fontTextField, gridBagConstraints);

    styleTextField.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(styleTextField, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(sizeTextField, gridBagConstraints);

    fontList.setModel(new javax.swing.AbstractListModel() {
      String[] strings = { " " };
      public int getSize() { return strings.length; }
      public Object getElementAt(int i) { return strings[i]; }
    });
    fontList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    fontList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        fontChanged(evt);
      }
    });
    scrollPane1.setViewportView(fontList);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(scrollPane1, gridBagConstraints);

    styleList.setModel(new javax.swing.AbstractListModel() {
      String[] strings = { "Plain", "Bold", "Italic", "Bold Italic" };
      public int getSize() { return strings.length; }
      public Object getElementAt(int i) { return strings[i]; }
    });
    styleList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    styleList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        styleChanged(evt);
      }
    });
    scrollPane2.setViewportView(styleList);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 12;
    gridBagConstraints.ipady = 12;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(scrollPane2, gridBagConstraints);

    sizeList.setModel(new javax.swing.AbstractListModel() {
      String[] strings = { "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "20", "22", "24", "26", "30", "34", "40", "50", "60", "72" };
      public int getSize() { return strings.length; }
      public Object getElementAt(int i) { return strings[i]; }
    });
    sizeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    sizeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        sizeChanged(evt);
      }
    });
    scrollPane3.setViewportView(sizeList);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 12;
    gridBagConstraints.ipady = 12;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(scrollPane3, gridBagConstraints);

    samplePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sample"));
    samplePanel.setMinimumSize(new java.awt.Dimension(400, 120));
    samplePanel.setPreferredSize(new java.awt.Dimension(400, 120));
    samplePanel.setLayout(new java.awt.BorderLayout());

    sampleLabel.setText("The quick brown fox jumps over the lazy dog");
    samplePanel.add(sampleLabel, java.awt.BorderLayout.CENTER);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    centerPanel.add(samplePanel, gridBagConstraints);

    getContentPane().add(centerPanel, java.awt.BorderLayout.CENTER);

    acceptButton.setText("Accept");
    acceptButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        acceptButtonActionPerformed(evt);
      }
    });
    southPanel.add(acceptButton);

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });
    southPanel.add(cancelButton);

    getContentPane().add(southPanel, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void fontChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_fontChanged
  {//GEN-HEADEREND:event_fontChanged
    String fontName = (String)fontList.getSelectedValue();
    fontTextField.setText(fontName);
    updateFont();
  }//GEN-LAST:event_fontChanged

  private void styleChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_styleChanged
  {//GEN-HEADEREND:event_styleChanged
    String style = (String)styleList.getSelectedValue();
    styleTextField.setText(style);
    updateFont();
  }//GEN-LAST:event_styleChanged

  private void sizeChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_sizeChanged
  {//GEN-HEADEREND:event_sizeChanged
    String size = (String)sizeList.getSelectedValue();
    sizeTextField.setText(size);
    updateFont();
  }//GEN-LAST:event_sizeChanged

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
  {//GEN-HEADEREND:event_cancelButtonActionPerformed
    accept = false;
    setVisible(false);
    dispose();
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_acceptButtonActionPerformed
  {//GEN-HEADEREND:event_acceptButtonActionPerformed
    accept = true;
    setVisible(false);
    dispose();
  }//GEN-LAST:event_acceptButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton acceptButton;
  private javax.swing.JButton cancelButton;
  private javax.swing.JPanel centerPanel;
  private javax.swing.JLabel fontLabel;
  private javax.swing.JList fontList;
  private javax.swing.JTextField fontTextField;
  private javax.swing.JLabel sampleLabel;
  private javax.swing.JPanel samplePanel;
  private javax.swing.JScrollPane scrollPane1;
  private javax.swing.JScrollPane scrollPane2;
  private javax.swing.JScrollPane scrollPane3;
  private javax.swing.JLabel sizeLabel;
  private javax.swing.JList sizeList;
  private javax.swing.JTextField sizeTextField;
  private javax.swing.JPanel southPanel;
  private javax.swing.JLabel styleLabel;
  private javax.swing.JList styleList;
  private javax.swing.JTextField styleTextField;
  // End of variables declaration//GEN-END:variables

  private void loadFonts()
  {
    if (fontNames == null)
    {
      fontNames = GraphicsEnvironment.getLocalGraphicsEnvironment().
        getAvailableFontFamilyNames();
    }
    DefaultListModel model = new DefaultListModel();
    for (String fontName : fontNames)
    {
      model.addElement(fontName);
    }
    fontList.setModel(model);
  }

  private void updateFont()
  {
    Font font = getSelectedFont();
    sampleLabel.setFont(font);
  }
}
